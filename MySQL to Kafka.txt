[root@db1 DataEngineering]# cd /DataEngineering
[root@db1 DataEngineering]# cat my.cnf
[mysqld]
skip-networking=0
log_bin = ON
server-id         = 1
log_bin           = mysql-bin
binlog_format     = ROW
binlog_row_image  = FULL
expire_logs_days  = 10

interactive_timeout=300
wait_timeout=300
binlog_rows_query_log_events=ON


[root@db1 DataEngineering]# cat docker-compose.yml
version: '3.8'

services:
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ahosan
      MYSQL_DATABASE: ahosan
      MYSQL_USER: ahosan
      MYSQL_PASSWORD: ahosan
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./mysqlData:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - kafka-net

  zookeeper:
    image: wurstmeister/zookeeper
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "baeldung:1:1"
    networks:
      - kafka-net
    depends_on:
      - zookeeper

  kafka-connect:
    image: debezium/connect:1.6
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=connect-cluster
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    depends_on:
      - kafka
      - zookeeper
    volumes:
      - ./debezium-connector-mysql/debezium-connector-mysql-2.5.3.Final.jar:/kafka/connect/debezium-connector-mysql.jar
    networks:
      - kafka-net

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge


[root@db1 DataEngineering]# docker compose up -d


[root@db1 DataEngineering]# docker exec -it mysql /bin/bash
bash-4.4# mysql -u root -p
Enter password:

select user, host, plugin from mysq.user;
DROP USER 'root'@'%';

CREATE USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'ahosan';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;


CREATE USER 'ahosan'@'%' IDENTIFIED WITH mysql_native_password BY 'ahosan';
GRANT ALL PRIVILEGES ON *.* TO 'ahosan'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;


--it is executed from SQL-Yog
CREATE TABLE ahosan.my_table (
    id INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(50),
    age INT
);

INSERT INTO ahosan.my_table (NAME, age) VALUES ('John', 30), ('Alice', 25), ('Bob', 35), ('Emily', 28);

SELECT * FROM ahosan.my_table;


[root@db1 DataEngineering]# vi mysql-debezium-connector.json
{
    "name": "mysql-connector",
    "config": {
      "connector.class": "io.debezium.connector.mysql.MySqlConnector",
      "tasks.max": "1",
      "database.hostname": "192.168.141.135",
      "database.port": "3306",
      "database.user": "ahosan",
      "database.password": "ahosan",
      "database.server.id": "1",
	  "database.server.name": "mysql",
      "database.history.kafka.bootstrap.servers": "kafka:9092",
      "database.history.kafka.topic": "schema-changes.ahosan"
    }
}

[root@db1 DataEngineering]# curl -X POST -H "Content-Type: application/json" --data @mysql-debezium-connector.json http://192.168.141.135:8083/connectors
[root@db1 DataEngineering]# curl -X GET http://192.168.141.135:8083/connectors/mysql-connector

http://192.168.141.135:9000


